CREATE SCHEMA IF NOT EXISTS public;
CREATE TABLE IF NOT EXISTS public.roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_organization_roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    organization_id bigint NOT NULL,
    user_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT user_organization_roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_project_roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    project_id bigint NOT NULL,
    user_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT user_project_roles_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    email character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users_roles
(
    user_id bigint NOT NULL,
    role_id bigint NOT NULL,
    CONSTRAINT users_roles_pkey PRIMARY KEY (user_id, role_id)
);

CREATE TABLE IF NOT EXISTS public.invitations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    accepted boolean NOT NULL,
    email character varying(255) COLLATE pg_catalog."default",
    expires_at timestamp(6) without time zone,
    organization_id bigint,
    project_id bigint,
    token character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT invitations_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.user_organization_roles
    ADD CONSTRAINT fkfov8obvofaw2ifxlm2jcqad55 FOREIGN KEY (role_id)
        REFERENCES public.roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_project_roles
    ADD CONSTRAINT fk5iuf73bgybyt6q71r1esc4nda FOREIGN KEY (role_id)
        REFERENCES public.roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_roles
    ADD CONSTRAINT fk2o0jvgh89lemvvo17cbqvdxaa FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users_roles
    ADD CONSTRAINT fkj6m8fwv7oqv74fcehir1a9ffy FOREIGN KEY (role_id)
        REFERENCES public.roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.roles
    OWNER to postgres;
ALTER TABLE IF EXISTS public.user_organization_roles
    OWNER to postgres;
ALTER TABLE IF EXISTS public.user_project_roles
    OWNER to postgres;
ALTER TABLE IF EXISTS public.users
    OWNER to postgres;
ALTER TABLE IF EXISTS public.users_roles
    OWNER to postgres;
ALTER TABLE IF EXISTS public.invitations
    OWNER to postgres;

GRANT ALL ON TABLE public.roles TO postgres;
GRANT ALL ON TABLE public.user_organization_roles TO postgres;
GRANT ALL ON TABLE public.user_project_roles TO postgres;
GRANT ALL ON TABLE public.users TO postgres;
GRANT ALL ON TABLE public.users_roles TO postgres;
GRANT ALL ON TABLE public.invitations TO postgres;